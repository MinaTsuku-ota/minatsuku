Githubの説明
sourcetreeの説明
xampp+laravel環境構築の説明

<用語の説明>
ローカル(Local)・・・エディタ等のワークツリーと呼ばれる場所・sourcetree等のインデックスと呼ばれる場所。変更していなければ{例:master}とだけ表示
リモート(Remote)・・・リポジトリと直接繋がる場所。変更していなければ{origin/〇〇〇}と表示

チェックアウト・・・選択する

<機能>
クローン(Clone)・・・リポジトリからインデックスにファイルをコピーする
フォーク(Fork)・・・リモートリポジトリからローカルリポジトリにファイルをコピーする

コミット(Commit)・・・ワークツリーからインデックスに変更ファイルを登録する
プッシュ(Push)・・・インデックスからリポジトリ上に変更ファイルを反映させる

フェッチ(Fetch)・・・リポジトリからインデックスに変更ファイルの履歴を反映させる
プル(Pull)・・・リポジトリからインデックスに変更ファイルを反映させる(Fetch + Mergeをしており変更ファイルブランチと現ブランチとを統合している)
※両機能の違いは変更ファイルを確認するか反映するかである

ブランチ(Branch)・・・作業場所
補足:通常はmasterブランチ上でファイルを編集せず、各機能に適したブランチを作成して編集し、完成した機能をmasterブランチにプッシュ/マージする

マージ(Merge)・・・現ブランチに異なるブランチを統合する
補足:プッシュは変更先を選択し変更ファイルを反映させるがブランチは消失しない
　　 マージは取込先を選択し変更ファイルを統合させブランチを消失させる

リベース(Rebase)・・・元ブランチと先ブランチの両方に変更が入った場合に、元ブランチに先ブランチの内容を分岐せずに取り込むことができる。

リセット(Reset)・・・現状態より以前の変更を取り消す。どこまで取り消すかを{Soft,Mixed,Hard}で選択する
  Soft・・・深刻ではなく、リモートにプッシュした変更ファイルをコミットする前のインデックスに戻す
  Mixed・・・深刻ではないが、インデックスにあげるよりも前のワークツリーに戻す
  Hard・・・深刻な変更をしてしまった場合に選択し、ワークツリー上のファイルを変更する前の状態に戻す

スタッシュ(Stash)・・・コミット内容を一時保存する

チェリーピック・・・変更すべてではなく、任意の変更を選択して取り込むことができる
<--- 随時追加 --->

参考サイト
https://backlog.com/ja/git-tutorial/ 「サルでもわかるGit入門」
https://www.youtube.com/playlist?list=PLh6V6_7fbbo_M3CqTeJvuXB08--fibyBu 「Git+Github入門」

https://laravel10.wordpress.com/ 「ララ帳」
https://blog.capilano-fw.com/?p=665#i-2 「Laravel・データベースからデータ取得する全実例 – console dot log」

https://higehito.qrunch.io/entries/DOthrJZ1hPaBV2jQ 「XAMPPで立ち上げたローカルサーバーとSSL通信をしたい。オレオレ証明書で - 髭人学習帳(仮)」
https://qiita.com/sutara79/items/21a068494bc3a08a4803「XAMPP for WindowsでSSLを有効にする - Qiita」


/*** Laravel環境設定 ***/
ローカル環境下ではいくつか自前で用意する必要がある
0...xampp(https://www.apachefriends.org/jp/index.html)をダウンロード(ReadMe記載時のバージョンは7.3.11)
\xampp\apache\conf\httpd.confにて、DOCUMENTROOTを "C:\minatsuku\laravel\public" の様に設定する
※publicフォルダをルートフォルダとしたい
※例のminatsuku
Apache起動、MySQL起動
MySQLは喜屋武先生の時に入れたものとxamppで入れたMySQLでポート番号が同じになって起動できないはずなので
応急処置としては
タスクマネージャを管理者権限で開いて[サービス]タブからMySQLを停止→xamppのMySQL起動
ってことをしている

/*** mysqlの文字化け対処(windows) ***/
https://qiita.com/YusukeHigaki/items/2cab311d2a559a543e3a 「mysqlで文字コードをutf8にセットする」
utf8への設定が終わったらmysqlへログインして次のコマンド
>charset cp932;

1...「.env」ファイルをlaravelフォルダに作る必要がある(minatsukuに作った"laravel"はlaravelプロジェクトネームのデフォルト値)
「.env.sample」をコピーして「.env」にリネームする
(.env内設定)
mysqlの使用を前提として、
DB_DATABASEに使用するデータベース名(事前に用意、名前は自由)
DB_USERNAMEにmysqlのユーザ名、DB_PASSWORDにmysqlのパスワード
(.env内mailtrap関連)
メールの環境設定:https://laravel10.wordpress.com/2015/02/22/%E3%83%A1%E3%83%BC%E3%83%AB%E3%81%AE%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/
MAIL_PORTはデフォルトの2525ではなく587を使用すると良い

2...「/vender」フォルダをlaravelフォルダに用意する必要がある。
カレントディレクトリをlaravelフォルダに移動して以下のコマンドを実行する。(composerは自前で用意https://getcomposer.org/)
composer install

3...laravelcollectiveをインストール(vender関連)
以下のコマンドを実行
composer require laravelcollective/html

4...「.env」ファイルのAPP_KEYを設定する。カレントディレクトリをlaravelフォルダに移動して以下のコマンドを実行する
php artisan key:generate

「.env」については  https://laravel10.wordpress.com/2015/02/13/laravel%e3%81%ae%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab/
(抜粋)
.env ファイルは実行環境ごとに分ける必要がある情報を格納しています。パスワードやデーターベース名等を開発機やステージング機、商用機等毎に個別に設定することが出来ます。
php artisan key:generate を実行すると .env 内の APP_KEY にアプリケーション固有のランダムストリングが設定されます。APP_KEYはユーザーのセッション情報やパスワードの暗号化等をセキュアにする為に必要になります。
※ git を使っている方は、.env を .gitignore ファイルに追加することをお忘れなく！

5..以下のコマンド実行
php artisan migrate // テーブル作成
php artisan db:seed // テーブルにダミーデータを挿入

6..認証関連ファイルのインストールとjsビルド
///// 認証関連:php artisan make:authが実行できないことについて
make:authはLaravel6.xではできなくなっている。以下のURLを参考にして認証関連のファイルを作成する(Qiita記事)
https://qiita.com/daisu_yamazaki/items/a914a16ca1640334d7a5

(手順)
composer require laravel/ui  // laravel/uiをインストール
php artisan ui vue --auth  // LOGIN機能＆テーブル作成
php artisan migrate
php artisan db:seed

↓こちらは必要に応じて
npm install  // FrontEndに必要なPackageをインストール(Node/npmの使用が必要、別途ダウンロードhttps://nodejs.org/ja/)
npm run dev  // CSS/JSを作成ビルド、jsファイルを編集する毎に行う

7...(laravel/)storage/app/publicをブラウザからアクセスできるようにする
以下のコマンドでpublic配下にstorageディレクトリへのシンボリックリンクが作られる
画像を公開したい場合に(laravel/)public配下に画像を配置するのではなく(laravel/)storageフォルダへのリンクを作っている
php artisan storage:link

8..DBを構築
composer dump-autoload // もっと早い段階でやる必要があるかも
php artisan migrate:refresh // migrate:reset + migrate
php artisan db:seed

9..google reCAPTCHA v3を導入する。laravelフォルダにて以下のコマンド
composer require google/recaptcha

10..reCAPTCHAの為にホストネーム(ローカルIPアドレス)を登録する:一旦サーバチームにご連絡を(recaptcha関連でエラーが出ていないなら登録済み)

11..「.env」に以下の行を追加
RECAPTCHA_SITEKRY={サイトキー}
RECAPTCHA_SECRET={シークレットキー}
{サイトキー}、{シークレットキー}については聞いてください

12..メール用の設定
// めんてなんすちゅう！

~~~環境設定はここまで~~~
※データベースのテーブルの構造を変更した場合は以下のコマンド
php artisan migrate:refresh // テーブル構造を再構築、テーブルの中身は全て消える
php artisan db:seed // seederで用意した初期値でレコードを登録する

~~~おまじない~~~
composer dump-autoload


(その他メモ)
ローカルブランチをリモートへのプッシュは
git push -u origin HEAD

factoryはseederでつかうやつ.
